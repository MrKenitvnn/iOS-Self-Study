

```Objective-C
// DataManager.h
@interface DataManager : NSObject

    @property (nonatomic, strong) NSString *someProperty;
    + (id) getInstance;

@end
```

```Objective-C
// DataManager.m
@implementation Datamanger

#pragma mark Singleton method
// không gọi trực tiếp hàm này
- (id) init {
    if (self = [super init]) {
        _someProperty = @"Demo Singleton";
    }
    return self;
}

// sử dụng dispatch_once
+ (id) getInstance {
    static DataManager *shareDataManager = nil;
    static dispatch_once_t dispatchOnce;
    dispath_once ( &dispatchOnce, ^{
        shareDataManager = [self new];
    });
    return shareDataManager;
}

// hoặc sử dụng @synchronized
+ (id) getInstance {
    static DataManager mInstance = nil;
    @synchronized (self) {
        if (!mInstance)
            mInstance = [[self alloc] init];
    }
    return mInstance;
}
@end
```
